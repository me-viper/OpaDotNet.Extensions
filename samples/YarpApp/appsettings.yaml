policies:
  - name: p1
    data.yaml: |
      a: 1
      b: 2
    source: |
      # METADATA
      # entrypoint: true
      package example.allow
      import future.keywords.if

      # METADATA
      # description: This policy never denies
      deny if {
        print("This policy never denies", "Input:", input)
        false
      }

  - name: p2
    source: |
      # METADATA
      # entrypoint: true
      package example.deny
      import future.keywords.if

      # METADATA
      # description: This policy always denies
      deny[format(rego.metadata.rule())] {
        print("This policy always denies")
        true
      }

      format(meta) := {"reason": meta.description}

  - name: p3
    source: |
      # METADATA
      # entrypoint: true
      package example.path
      import future.keywords.if

      # METADATA
      # description: Path is not allowed
      deny[format(rego.metadata.rule())] {
        print("Path:", input.path)
        not startswith(input.path, "/path/allow")
      }

      format(meta) := {"reason": meta.description}
